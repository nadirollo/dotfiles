# set Zsh as the  default Tmux shell
set-option -g default-shell /bin/zsh

# Tmuxinator compatibility for other base-index than the default
set-window-option -g pane-base-index 1

# Make it pretty... at least as pretty as it can be
set -g default-terminal "screen-256color"


# Set Ctrl-a as control key. ('Ctrl-a' is easier to reach than 'Ctrl-b'... and it's the same as GNU screen)
set -g prefix C-a
unbind C-b

# command delay? We don't want that, make it short
set -sg escape-time 1

# Set the numbering of windows to go from 1 instead
set-option -g base-index 1
setw -g pane-base-index 1

# Allow us to reload our Tmux configuration while
# using Tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Getting interesting now, we use the vertical and horizontal
# symbols to split the screen
bind | split-window -h
bind - split-window -v

# Don't fuck with the escape key
set -s escape-time 0

# Set terminal titles
set -g set-titles on
set -g set-titles-string "#S"

# Resize panes
bind < resize-pane -L 1
bind > resize-pane -R 1
bind = resize-pane -U 1
bind + resize-pane -D 1

# Synchronize input to all panes
bind a set-window-option synchronize-panes

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status on
set -g status-interval 2
set -g status-left-length 60
set -g status-right-length 60
set -g status-left '#h #[fg=blue]#[bg=black][#S:#I] '
set -g status-right '#[fg=blue] %d-%b'

# Windows status
setw -g window-status-current-fg white
setw -g window-status-current-bg blue

# Active pane
set -g pane-border-style fg=magenta
set -g pane-active-border-style fg=magenta
set -g pane-active-border-style bg=default

# don't rename windows automatically
set-option -g allow-rename off

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Remap Ctrl + L to be able to clear the screen inside tmux
bind C-l send-keys 'C-l'

# Enable mouse events on tmux
set -g mouse on

# Copy like a pro
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Powerline for tmux
# https://github.com/powerline/powerline
run-shell "powerline-daemon -q"
source "/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"
